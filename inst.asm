.MODEL SMALL
.STACK 100H
.DATA
AR DB 1,5,2,6,7,3,9,0,8,4
ARR DB 10,13,'SORTED VALUES ARE: $'
ARR1  DB  'VALUES ENTERED: $'
NUM DW ?
TEMP1 DW ?
NUM1 DB ?
TEMP DW ?
.CODE

MAIN PROC
MOV AX,@DATA    ;USING DATA INTILIZED
MOV DS,AX

MOV AH,9        ;PRINTING STRING
MOV DL, 20H
LEA DX,ARR    ;MOVING OFFSET OF ARR TO DX
INT 21H       ;PRINTING WHAT IS IN DX

MOV NUM,10    ;MOVING THE COUNT OF DIGITS ENTERED
MOV CX,2

OUTERLOOP:
CMP CX,NUM  ;COMPARING LOOP COUNTER WITH NUMBER OF DIGITS ENTERED
JGE EXITL  ;JUMP IF GREATER THAN OR EQUAL

MOV SI,CX       ;SI = CX
MOV BL,AR[SI]   ;MOVING FIRST NUM TO BL
MOV NUM1,BL     ;MOVING FIRST NUM TO NUM1
MOV TEMP1,CX    ;MOVING COUNTER TO TEMP VARIABLE
DEC TEMP1       ;DECREMENTING THE TEMP VARIBALE
MOV AX,TEMP1    ;MOVING TEMP1 VARIBALE TO AX

INNERLOOP:      ;LOOP LABEL
MOV SI,AX
MOV BL,AR[SI]  ;TAKING THE NUMBER FROM ARRAY
CMP BL,NUM1
JG SWAP        ;JUMP IF GREATER
JMP CONTINUE   ;UNCONDITIONAL JUMP

CONTINUE:         ;LABEL
INC AX
MOV SI,AX        ;TAKING THAT TEMP VARIABLE IN SI
MOV BL,NUM1      
MOV AR[SI],BL    ;TAKING NEXT NUMBER FROM ARRAY
INC CX
JMP OUTERLOOP    ;JUMPING BACK TO OUTERLOOP

SWAP:          ;SWAPPING
MOV TEMP,AX    ;MOVING AX TO ANOTHER TEMP VARIABLE
INC TEMP           
MOV SI,TEMP
MOV AR[SI],BL  ;REPLACING IT WITH FIRST NUMBER 
DEC AX         ;AX = AX-1
JMP INNERLOOP  ;UNCONDITIONAL JUMP

EXITL:             ;SETTING REGISTERS
MOV CX,1           ;CX=1
MOV AH,2           ;PRINTING CHARCTER
MOV SI,0           ;SI=0

PRINT:   
CMP CX,10   ;MOVING NUMBER OF COUNTS
JGE EXIT           ;RUNS THE LOOP TILL CX >= 10
MOV SI,CX
MOV BL,AR[SI]      ;TRAVERSING THROUGH THE ARRAY
ADD BX,30H         ;TO GET THE RIGHT NUMBER OUT
MOV DL,BL         ;SET DL = BL
INT 21H           ;PRINTING WHAT IS IN DATA REGISTER
INC CX            ;INCREMENTING COUNTER REGISTER
JMP PRINT    ;UNCONDITIONAL JUMP

EXIT:              ;CONTROL BACK TO DOS
MOV AH,4CH     
INT 21H

MAIN ENDP
END MAIN